---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  annotations:
    # This rewrites the routes incoming to nginx to start at /
    # e.g., hostname.ca/foobar/test => hostname.ca/test
    # This allows us to run multiple services that can be accesible
    # via /vscode, /machinelearning, etc.
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx

  # We will only have one host: the full FQDN (from tailscale)
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: "/(.*)"
            backend:
              service:
                name: conglobo
                port:
                  number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: conglobo
spec:
  ports:
    - port: 80 # THIS SHOULD ALWAYS BE 80
      targetPort: 80
  selector:
    app: conglobo

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: conglobo-persistent-storage
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: conglobo-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: conglobo-role
rules:
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["create", "delete", "get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["create", "delete", "get"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["update", "get"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["create", "delete", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: conglobo-role-binding
subjects:
  - kind: ServiceAccount
    name: conglobo-service-account
roleRef:
  kind: Role
  name: conglobo-role
  apiGroup: rbac.authorization.k8s.io
